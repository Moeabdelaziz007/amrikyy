[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "auraos"
version = "1.0.0"
description = "AI-Powered Operating System"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "AuraOS Team", email = "team@auraos.com"},
]
keywords = ["ai", "operating-system", "fastapi", "python"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Operating Systems",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "redis>=5.0.1",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "aiohttp>=3.9.1",
    "httpx>=0.25.2",
    "python-multipart>=0.0.6",
    "loguru>=0.7.2",
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "sentry-sdk[fastapi]>=1.38.0",
    "cryptography>=41.0.8",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "openai>=1.3.7",
    "anthropic>=0.7.8",
    "langchain>=0.0.350",
    "langchain-community>=0.0.10",
    "firebase-admin>=6.4.0",
    "google-cloud-firestore>=2.13.1",
    "google-cloud-storage>=2.10.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.7",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "jinja2>=3.1.2",
    "celery>=5.3.4",
    "flower>=2.0.1",
    "gunicorn>=21.2.0",
    "psutil>=5.9.6",
    "schedule>=1.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-html>=4.1.1",
    "pytest-benchmark>=4.0.0",
    "coverage>=7.3.2",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "pre-commit>=3.6.0",
    "pylint>=3.0.3",
    "autopep8>=2.0.4",
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
    "ipython>=8.17.2",
    "jupyter>=1.0.0",
    "notebook>=7.0.6",
    "ipdb>=0.13.13",
    "pdbpp>=0.10.3",
    "py-spy>=0.3.14",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.1",
    "httpx>=0.25.2",
    "requests>=2.31.0",
    "locust>=2.17.0",
    "alembic>=1.13.1",
    "sqlalchemy-utils>=0.41.1",
    "sentry-sdk[fastapi]>=1.38.0",
    "debugpy>=1.8.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-html>=4.1.1",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.2.0",
    "pytest-env>=1.1.1",
    "coverage[toml]>=7.3.2",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
    "freezegun>=1.2.2",
    "httpx>=0.25.2",
    "requests>=2.31.0",
    "responses>=0.24.1",
    "pytest-postgresql>=5.0.0",
    "pytest-redis>=3.0.1",
    "locust>=2.17.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "moto>=4.2.14",
]

prod = [
    "gunicorn>=21.2.0",
    "uvicorn[standard]>=0.24.0",
    "cryptography>=41.0.8",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "sentry-sdk[fastapi]>=1.38.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "uvloop>=0.19.0",
    "orjson>=3.9.10",
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.23",
    "alembic>=1.13.1",
    "redis[hiredis]>=5.0.1",
    "celery[redis]>=5.3.4",
    "flower>=2.0.1",
    "aiofiles>=23.2.1",
    "python-magic>=0.4.27",
    "openai>=1.3.7",
    "anthropic>=0.7.8",
    "langchain>=0.0.350",
    "langchain-community>=0.0.10",
    "firebase-admin>=6.4.0",
    "google-cloud-firestore>=2.13.1",
    "google-cloud-storage>=2.10.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.7",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "jinja2>=3.1.2",
    "schedule>=1.2.0",
    "psutil>=5.9.6",
]

[project.urls]
Homepage = "https://github.com/auraos/auraos"
Documentation = "https://docs.auraos.com"
Repository = "https://github.com/auraos/auraos.git"
"Bug Tracker" = "https://github.com/auraos/auraos/issues"

[project.scripts]
auraos = "auraos.cli:main"
auraos-dev = "auraos.scripts.dev:main"
auraos-deploy = "auraos.scripts.deploy:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["auraos*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
auraos = ["py.typed", "*.pyi"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["auraos"]
known_third_party = ["fastapi", "pydantic", "redis", "sqlalchemy"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "celery.*",
    "flower.*",
    "prometheus_client.*",
    "structlog.*",
    "loguru.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["auraos"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
