{
  "timestamp": "2025-09-22T20:14:25.866Z",
  "scanDuration": "3083 files scanned",
  "securityScore": 0,
  "issues": {
    "critical": [
      {
        "file": ".env",
        "type": "Private Key",
        "description": "Hardcoded private key detected",
        "line": 42,
        "match": "PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\n-----BEG...",
        "recommendation": "Move private key to environment variables"
      },
      {
        "file": ".vscode/tasks.json",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 104,
        "match": "password: 'auraos123'...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "AURAOS_SETUP_GUIDE.md",
        "type": "Private Key",
        "description": "Hardcoded private key detected",
        "line": 36,
        "match": "PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\n...\\n---...",
        "recommendation": "Move private key to environment variables"
      },
      {
        "file": "COMPREHENSIVE_EVALUATION_REPORT.md",
        "type": "API Key",
        "description": "Hardcoded API key detected",
        "line": 98,
        "match": "apiKey: \"AIzaSyApDku-geNVplwIgRBz2U0rs46aAVo-_mE\"...",
        "recommendation": "Move api key to environment variables"
      },
      {
        "file": "ENV_TEMPLATE_COMPREHENSIVE.md",
        "type": "Private Key",
        "description": "Hardcoded private key detected",
        "line": 30,
        "match": "PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\nYOUR_PRI...",
        "recommendation": "Move private key to environment variables"
      },
      {
        "file": "FIREBASE_STUDIO_SETUP.md",
        "type": "Private Key",
        "description": "Hardcoded private key detected",
        "line": 73,
        "match": "private_key: \"-----BEGIN PRIVATE KEY-----\\nACTUAL_...",
        "recommendation": "Move private key to environment variables"
      },
      {
        "file": "FIREBASE_STUDIO_SETUP.md",
        "type": "Private Key",
        "description": "Hardcoded private key detected",
        "line": 81,
        "match": "PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\nACTUAL_P...",
        "recommendation": "Move private key to environment variables"
      },
      {
        "file": "GEMINI_MCP_INTEGRATION_REPORT.md",
        "type": "API Key",
        "description": "Hardcoded API key detected",
        "line": 50,
        "match": "apiKey: 'AIzaSyAA01N65C8bwPf1WnNj9qsR7nHfmXYoLjU'...",
        "recommendation": "Move api key to environment variables"
      },
      {
        "file": "QUICK_SETUP_GUIDE.md",
        "type": "Private Key",
        "description": "Hardcoded private key detected",
        "line": 62,
        "match": "PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\nYOUR_ACT...",
        "recommendation": "Move private key to environment variables"
      },
      {
        "file": "SETUP_INSTRUCTIONS.md",
        "type": "Private Key",
        "description": "Hardcoded private key detected",
        "line": 40,
        "match": "PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\nYOUR_ACT...",
        "recommendation": "Move private key to environment variables"
      },
      {
        "file": "TELEGRAM_ENHANCEMENT_REPORT.md",
        "type": "Token",
        "description": "Hardcoded token detected",
        "line": 68,
        "match": "token: '8310343758:AAFLtyqdQ5PE8YtyChwJ4uGfAgy4s5q...",
        "recommendation": "Move token to environment variables"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "API Key",
        "description": "Hardcoded API key detected",
        "line": 16,
        "match": "apiKey: 'AIzaSyApDku-geNVplwIgRBz2U0rs46aAVo-_mE'...",
        "recommendation": "Move api key to environment variables"
      },
      {
        "file": "client/src/lib/validation.ts",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 56,
        "match": "password:\n    'Password must be at least 8 charact...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "client/src/lib/validation.tsx",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 39,
        "match": "password:\n    'Password must be at least 8 charact...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "cross-platform-config.js",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 241,
        "match": "Password: 'YOUR_KEYSTORE_PASSWORD'...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "cross-platform-config.js",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 243,
        "match": "Password: 'YOUR_KEY_PASSWORD'...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "script.js",
        "type": "API Key",
        "description": "Hardcoded API key detected",
        "line": 107,
        "match": "apiKey: \"AIzaSyApDku-geNVplwIgRBz2U0rs46aAVo-_mE\"...",
        "recommendation": "Move api key to environment variables"
      },
      {
        "file": "script.js",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 950,
        "match": "password: 'password123'...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "script.js",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 950,
        "match": "password: 'password123'...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "script.js",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 952,
        "match": "password: 'admin123'...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "JWT Secret",
        "description": "Hardcoded JWT secret detected",
        "line": 40,
        "match": "JWT_SECRET: 'your-super-secure-jwt-secret-key-chan...",
        "recommendation": "Move jwt secret to environment variables"
      },
      {
        "file": "security-scanner.js",
        "type": "Code Injection",
        "description": "Unsafe eval() usage detected",
        "line": 216,
        "match": "eval(",
        "recommendation": "Review and sanitize user input"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Token",
        "description": "Hardcoded token detected",
        "line": 849,
        "match": "token: '8310343758:AAFLtyqdQ5PE8YtyChwJ4uGfAgy4s5q...",
        "recommendation": "Move token to environment variables"
      },
      {
        "file": "server/firebase.ts",
        "type": "Token",
        "description": "Hardcoded token detected",
        "line": 38,
        "match": "token:', error);\n    throw new Error('...",
        "recommendation": "Move token to environment variables"
      },
      {
        "file": "server/storage.ts",
        "type": "Password",
        "description": "Hardcoded password detected",
        "line": 87,
        "match": "password: 'hashed_password'...",
        "recommendation": "Move password to environment variables"
      },
      {
        "file": "server/task-automation-engine.ts",
        "type": "Code Injection",
        "description": "Unsafe eval() usage detected",
        "line": 968,
        "match": "eval(",
        "recommendation": "Review and sanitize user input"
      },
      {
        "file": "server/workflow-engine.ts",
        "type": "Code Injection",
        "description": "Unsafe eval() usage detected",
        "line": 813,
        "match": "eval(",
        "recommendation": "Review and sanitize user input"
      },
      {
        "file": "server/workflow-engine.ts",
        "type": "Code Injection",
        "description": "Unsafe eval() usage detected",
        "line": 813,
        "match": "eval(",
        "recommendation": "Review and sanitize user input"
      }
    ],
    "high": [
      {
        "file": "advanced-tools.js",
        "type": "XSS Risk",
        "description": "Potential XSS vulnerability with innerHTML",
        "line": 439,
        "match": "innerHTML = `\n        <div class=\"tools-grid\">\n            ${tools\n              .map(\n             ",
        "recommendation": "Review and sanitize user input"
      }
    ],
    "medium": [
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.get('/api/users/current', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.get('/api/users/:id/stats', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.get('/api/posts', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.post('/api/posts', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.post('/api/posts/:id/like', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.post('/api/ai/generate-content', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.get('/api/agent-templates', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.post('/api/agent-templates/:id/use', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.get('/api/user-agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.post('/api/user-agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.get('/api/workflows', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.post('/api/workflows', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.put('/api/workflows/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.delete('/api/workflows/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.post('/api/chat', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1,
        "match": "app.get('/api/chat/history', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "auraos-automation/src/api.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 95,
        "match": "app.post('/tasks', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "auraos-automation/src/api.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 134,
        "match": "app.get('/tasks/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "auraos-automation/src/api.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 157,
        "match": "app.post('/tasks/:id/execute', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "auraos-automation/src/api.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 173,
        "match": "app.get('/executions/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "auraos-automation/src/api.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 196,
        "match": "app.get('/tasks/:id/executions', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/index.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 35,
        "match": "app.get('/health', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 283,
        "match": "app.get('/api/users/current', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 296,
        "match": "app.get('/api/users/:id/stats', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 307,
        "match": "app.get('/api/learning/progress/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 317,
        "match": "app.get('/api/learning/activities/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 328,
        "match": "app.get('/api/learning/recommendations/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 340,
        "match": "app.post('/api/learning/activity', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 349,
        "match": "app.get('/api/learning/leaderboard', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 359,
        "match": "app.get('/api/learning/challenges', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 369,
        "match": "app.get('/api/posts', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 379,
        "match": "app.post('/api/posts', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 393,
        "match": "app.post('/api/posts/:id/like', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 413,
        "match": "app.post('/api/ai/generate-content', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 445,
        "match": "app.get('/api/agent-templates', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 454,
        "match": "app.post('/api/agent-templates/:id/use', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 465,
        "match": "app.get('/api/user-agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 475,
        "match": "app.post('/api/user-agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 486,
        "match": "app.get('/api/workflows', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 496,
        "match": "app.post('/api/workflows', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 506,
        "match": "app.put('/api/workflows/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 517,
        "match": "app.delete('/api/workflows/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 528,
        "match": "app.post('/api/chat', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 568,
        "match": "app.get('/api/chat/history', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 580,
        "match": "app.get('/api/telegram/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 607,
        "match": "app.post('/api/telegram/send-message', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 636,
        "match": "app.post('/api/telegram/send-photo', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 664,
        "match": "app.post('/api/telegram/broadcast', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 705,
        "match": "app.post('/api/ai/smart-learning', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 737,
        "match": "app.get('/api/ai/learning-state/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 754,
        "match": "app.get('/api/ai/performance-metrics/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 773,
        "match": "app.post('/api/ai/zero-shot/content-generation', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 801,
        "match": "app.post('/api/ai/zero-shot/sentiment-analysis', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 829,
        "match": "app.post('/api/ai/zero-shot/intent-classification', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 857,
        "match": "app.post('/api/ai/zero-shot/style-transfer', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 885,
        "match": "app.post('/api/ai/feedback', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 921,
        "match": "app.post('/api/ai/reset-learning/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 934,
        "match": "app.get('/api/ai/export-learning/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 947,
        "match": "app.post('/api/ai/import-learning/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 970,
        "match": "app.get('/api/travel/services', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 980,
        "match": "app.get('/api/travel/services/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 996,
        "match": "app.post('/api/travel/recommendations', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1024,
        "match": "app.get('/api/food/services', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1034,
        "match": "app.get('/api/food/services/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1050,
        "match": "app.post('/api/food/recommendations', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1078,
        "match": "app.get('/api/shopping/agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1088,
        "match": "app.get('/api/shopping/agents/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1104,
        "match": "app.post('/api/shopping/agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1132,
        "match": "app.post('/api/automation/travel-workflow', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1179,
        "match": "app.post('/api/automation/food-workflow', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1227,
        "match": "app.get('/api/automation/engine/stats', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1237,
        "match": "app.get('/api/automation/engine/performance', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1247,
        "match": "app.post('/api/automation/engine/rules', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1277,
        "match": "app.get('/api/autopilot/live/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1295,
        "match": "app.post('/api/autopilot/emergency-stop', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1319,
        "match": "app.post('/api/autopilot/rule/:ruleId/toggle', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1349,
        "match": "app.post('/api/autopilot/rule/:ruleId/override', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1369,
        "match": "app.delete('/api/autopilot/rule/:ruleId/override', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1388,
        "match": "app.post('/api/workflows/:workflowId/pause', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1410,
        "match": "app.post('/api/workflows/:workflowId/resume', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1432,
        "match": "app.get('/api/workflows/:workflowId/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1451,
        "match": "app.get('/api/workflows/intelligent/stats', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1461,
        "match": "app.post('/api/workflows/intelligent/create', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1489,
        "match": "app.get('/api/system/intelligence/overview', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1528,
        "match": "app.post('/api/system/intelligence/optimize', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1555,
        "match": "app.post('/api/ai/decision', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1593,
        "match": "app.post('/api/analytics/predict', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1654,
        "match": "app.get('/api/telegram/smart/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1698,
        "match": "app.get('/api/telegram/smart/users', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1729,
        "match": "app.get('/api/telegram/smart/users/:chatId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1769,
        "match": "app.post('/api/telegram/smart/learn', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1816,
        "match": "app.post('/api/telegram/smart/feedback', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1855,
        "match": "app.get('/api/telegram/smart/analytics', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1927,
        "match": "app.post('/api/mcp/message', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1945,
        "match": "app.get('/api/mcp/capabilities', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1956,
        "match": "app.get('/api/mcp/tools', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1967,
        "match": "app.get('/api/mcp/agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1979,
        "match": "app.get('/api/ai-tools', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 1990,
        "match": "app.get('/api/ai-tools/categories', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2001,
        "match": "app.get('/api/ai-tools/:toolId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2018,
        "match": "app.post('/api/ai-tools/:toolId/execute', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2048,
        "match": "app.get('/api/ai-tools/analytics/:toolId?', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2060,
        "match": "app.post('/api/ai-tools/discover', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2078,
        "match": "app.get('/api/ai-agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2089,
        "match": "app.get('/api/ai-agents/:agentId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2106,
        "match": "app.post('/api/ai-agents', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2168,
        "match": "app.post('/api/ai-agents/:agentId/tasks', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2194,
        "match": "app.get('/api/ai-agents/:agentId/tasks', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2206,
        "match": "app.post('/api/ai-agents/collaboration', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2230,
        "match": "app.get('/api/ai-agents/analytics/:agentId?', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2242,
        "match": "app.post('/api/ai-agents/:agentId/communicate', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2265,
        "match": "app.get(\n    '/api/ai-agents/:agentId1/:agentId2/communication',\n    async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2286,
        "match": "app.get('/api/ai/multimodal/models', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2296,
        "match": "app.get('/api/ai/multimodal/models/active', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2306,
        "match": "app.get('/api/ai/multimodal/models/:modelId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2322,
        "match": "app.post('/api/ai/multimodal/process', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2333,
        "match": "app.get('/api/ai/multimodal/performance', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2344,
        "match": "app.get('/api/ai/streaming/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2354,
        "match": "app.get('/api/ai/streaming/connections', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2364,
        "match": "app.get('/api/ai/streaming/sessions', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2374,
        "match": "app.get('/api/ai/streaming/metrics', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2385,
        "match": "app.get('/api/ai/models', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2395,
        "match": "app.get('/api/ai/models/:modelId/versions', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2406,
        "match": "app.get('/api/ai/models/:modelId/versions/latest', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2422,
        "match": "app.post(\n    '/api/ai/models/:modelId/versions/:versionId/activate',\n    async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2444,
        "match": "app.get('/api/ai/deployments', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2454,
        "match": "app.get('/api/ai/deployments/active', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2464,
        "match": "app.post('/api/ai/deployments', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2480,
        "match": "app.delete('/api/ai/deployments/:deploymentId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2496,
        "match": "app.get('/api/ai/training', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2506,
        "match": "app.get('/api/ai/training/active', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2516,
        "match": "app.post('/api/ai/training', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2527,
        "match": "app.delete('/api/ai/training/:jobId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2548,
        "match": "app.get('/api/ai/federated-learning', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2558,
        "match": "app.get('/api/ai/federated-learning/active', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2568,
        "match": "app.post('/api/ai/federated-learning', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2582,
        "match": "app.get('/api/ai/system-metrics', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2592,
        "match": "app.post('/api/ai/models/:modelId/optimize', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2607,
        "match": "app.post('/api/ai/models/:modelId/archive', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2623,
        "match": "app.post('/api/ai/models/:modelId/restore', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2640,
        "match": "app.post('/api/enterprise/teams', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2663,
        "match": "app.get('/api/enterprise/teams', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2674,
        "match": "app.get('/api/enterprise/teams/:teamId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2690,
        "match": "app.post('/api/enterprise/teams/:teamId/members', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2716,
        "match": "app.get('/api/enterprise/teams/:teamId/analytics', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2728,
        "match": "app.get('/api/enterprise/admin/dashboard/metrics', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2738,
        "match": "app.get('/api/enterprise/admin/dashboard/widgets', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2748,
        "match": "app.get('/api/enterprise/admin/dashboard/alerts', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2759,
        "match": "app.post(\n    '/api/enterprise/admin/dashboard/alerts/:alertId/acknowledge',\n    async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2790,
        "match": "app.get('/api/travel/destinations', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2800,
        "match": "app.get('/api/travel/destinations/:id', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2816,
        "match": "app.post('/api/travel/flights/search', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2827,
        "match": "app.post('/api/travel/hotels/search', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 996,
        "match": "app.post('/api/travel/recommendations', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2859,
        "match": "app.post('/api/travel/bookings', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2870,
        "match": "app.get('/api/travel/bookings/:userId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2881,
        "match": "app.get('/api/travel/bookings/booking/:bookingId', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2898,
        "match": "app.get('/api/travel/dashboard/metrics', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2910,
        "match": "app.get('/api/travel/dashboard/widgets', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2923,
        "match": "app.post('/api/collaboration/sessions', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2954,
        "match": "app.post('/api/collaboration/sessions/:sessionId/join', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 2977,
        "match": "app.post('/api/collaboration/sessions/:sessionId/leave', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3007,
        "match": "app.get(\n    '/api/collaboration/sessions/:sessionId/comments',\n    async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3022,
        "match": "app.post(\n    '/api/collaboration/sessions/:sessionId/comments',\n    async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3057,
        "match": "app.get('/api/system/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3115,
        "match": "app.post('/api/ai/chat', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3140,
        "match": "app.get('/api/autopilot/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3162,
        "match": "app.get('/api/workflows/templates', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3177,
        "match": "app.get('/api/ai/agents/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3205,
        "match": "app.get('/api/system/health', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3235,
        "match": "app.get('/api/system/logs', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3303,
        "match": "app.post('/api/n8n/workflows/:id/execute', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3399,
        "match": "app.post('/api/integrations/connectors/:id/test', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3473,
        "match": "app.post('/api/ai/prompts/:id/execute', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3541,
        "match": "app.get('/api/auth/status', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3570,
        "match": "app.post('/api/auth/login', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 3601,
        "match": "app.post('/api/auth/logout', async (",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "CSRF Risk",
        "description": "Route handler without CSRF protection",
        "line": 137,
        "match": "app.post('/api/auth/logout', authenticateToken, async (",
        "recommendation": "Implement proper security measures"
      }
    ],
    "low": [
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 1,
        "match": "req.query.limit as string) || 10;\\n      const posts = await storage.getPostsWithAuthor(limit);\\n   ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 1,
        "match": "req.query.userId as string || 'user-1';\\n      const agents = await storage.getUserAgents(userId);\\n",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 1,
        "match": "req.query.userId as string || 'user-1';\\n      const workflows = await storage.getWorkflowsByUser(us",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 1,
        "match": "req.query.userId as string || 'user-1';\\n      const limit = parseInt(req.query.limit as string) || ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".local/state/replit/agent/filesystem/filesystem_state.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".vscode/tasks.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".vscode/tasks.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".vscode/tasks.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": ".vscode/tasks.json",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ADVANCED_ANALYTICS_README.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 393,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 153,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 153,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 153,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 167,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 153,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 167,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 167,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_IMPLEMENTATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 167,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_QUICKSTART_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 105,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_QUICKSTART_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 105,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOMATION_QUICKSTART_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 105,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOPILOT_SYSTEM_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "AUTOPILOT_SYSTEM_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "COMPLETE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 494,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "COMPLETE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 525,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "COMPLETE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 494,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "COMPLETE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 494,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "COMPLETE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 494,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "COMPLETE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 494,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "DEBUGGING_REPORT.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 322,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ENV_PROTECTION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 118,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "FINAL_AUTOMATION_REPORT.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 102,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "FINAL_AUTOMATION_REPORT.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 102,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "FIREBASE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 340,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "FIREBASE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 355,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "FIREBASE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 355,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "FIREBASE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 355,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "FIREBASE_INTEGRATION_GUIDE.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 355,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_IMPLEMENTATION.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 288,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_IMPLEMENTATION.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 288,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 35,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 35,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "LEARNING_BRAIN_QUICKSTART.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 35,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "USER_HISTORY_DOCUMENTATION.md",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 298,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "admin-panel.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "advanced-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 203,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "advanced-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 203,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "advanced-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 203,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "advanced-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 203,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 35,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 35,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 35,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 100,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 120,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 100,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 35,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "ai-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 100,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "analytics.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 640,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "analytics.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 640,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "analytics.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 692,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "analytics.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 640,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "analytics.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 640,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "analytics.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 640,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "analytics.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 640,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "api-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 184,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "api-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 184,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "api-system.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 184,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 25,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/firestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/mockFirestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 14,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/mockFirestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 14,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/mockFirestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 14,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/mockFirestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 14,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/mockFirestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 14,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/mockFirestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 14,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/adapters/mockFirestoreAdapter.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 14,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/api.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 217,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/api.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 217,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-automation/src/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-mcp/.venv/lib/python3.11/site-packages/urllib3/contrib/emscripten/emscripten_fetch_worker.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 40,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-mcp/.venv/lib/python3.11/site-packages/urllib3/contrib/emscripten/emscripten_fetch_worker.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 40,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 712,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 712,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "auraos-system-audit.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 583,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 20,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "autopilot-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 161,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cache-bust.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 4,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cache-bust.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 4,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cache-bust.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 4,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cache-bust.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 4,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cache-bust.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 4,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cache-bust.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 4,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cache-bust.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 4,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 23,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cli.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 131,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 131,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 131,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 131,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 131,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/public/sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/apps/prompt-library/prompt-library-app.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 243,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/AuraOSLanding.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/ai/ai-personalization-dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 36,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/ai/ai-travel-agency.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/ai/ai-travel-agency.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/ai/ai-travel-agency.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 59,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/analytics/advanced-analytics-dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 116,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/analytics/automated-reports.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 123,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/analytics/page-tracker.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/analytics/performance-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 86,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/analytics/security-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 85,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/automation/WorkflowBuilder.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 547,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/dashboard/UserProfile.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/dashboard/UserProfile.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/layout/sidebar.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 185,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/mobile/mobile-advanced-analytics-dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 99,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/mobile/mobile-advanced-analytics-dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 99,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/mobile/mobile-advanced-analytics-dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 99,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/mobile/mobile-advanced-analytics-dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 99,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/mobile/mobile-advanced-analytics-dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 99,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/monitoring/SystemMonitor.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 119,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/monitoring/SystemMonitor.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/monitoring/SystemMonitor.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/ui/error-boundary.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/ui/keyboard-navigation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/components/workflow/workflow-marketplace.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 231,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-ai-personalization.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 186,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-auth.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-auth.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-auth.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-auth.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-auth.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-firebase-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 149,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-firebase-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 149,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-firebase-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 149,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-firebase-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 149,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-firebase-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 149,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-firebase-analytics.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 149,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-performance.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 21,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-performance.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 50,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-user-history.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 34,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-websocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 385,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 388,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/hooks/use-workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 388,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 365,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/advanced-analytics-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 159,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 136,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 136,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 136,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 136,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 702,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/ai-personalization.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 497,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/analytics-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 427,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/analytics-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 427,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/error-handling.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/error-handling.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/error-handling.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/error-handling.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 33,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 239,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 239,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 239,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-analytics.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 241,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 153,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 153,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase-unified.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 138,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 66,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firebase.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 44,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 123,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 123,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 210,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 123,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 210,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/firestore-config.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 123,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/mobile-firebase-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 93,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 62,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/user-history-service.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 795,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 795,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 795,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 734,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 607,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 607,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 607,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/lib/workflow-automation.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 561,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 408,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 413,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 413,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 413,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 413,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 413,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/pages/automation-tasks.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 289,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/automation-api.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 63,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/travel-api.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 82,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 80,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 80,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 107,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 194,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 107,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 107,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 194,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 80,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 107,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "client/src/services/websocket-client.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 107,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 140,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 140,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 140,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 140,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 140,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-llm-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 140,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-mcp-server.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 197,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "cursor-mcp-server.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 197,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 134,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 951,
        "match": "console.debug(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "dashboard.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "enhanced-chatbot.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 421,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "enhanced-chatbot.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 421,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "enhanced-chatbot.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1210,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "icons/generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "icons/generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "icons/generate-icons.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 628,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "mobile-platform.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 290,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 290,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 290,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 290,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "multi-tenancy.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 91,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 43,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 45,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 43,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 43,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 43,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 45,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 43,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 45,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "realtime.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 45,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "router.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 120,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "router.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 185,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "router.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 500,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 124,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "script.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 6,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "scripts/deploy-security.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 28,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-headers.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 95,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-headers.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 95,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-headers.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 156,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 54,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 120,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 120,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "security-scanner.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 38,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "seed.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 11,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "seed.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 15,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "seed.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 11,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "seed.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 16,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-ai-agents.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 513,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-ai-agents.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 513,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 305,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 305,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 305,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 305,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 305,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 305,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 147,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/advanced-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 305,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-model-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 205,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 738,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 738,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/ai-prompt-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 128,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 109,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 109,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/database.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 84,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 1014,
        "match": "req.params.id);\n    if (!agent) {\n      return res\n        .status(404)\n        .json({\n          su",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/api/automation/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 1037,
        "match": "req.params.id);\n    if (!agent) {\n      return res\n        .status(404)\n        .json({\n          su",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/api/automation/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1258,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 58,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 58,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 58,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 163,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 58,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 163,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 58,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 58,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 58,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/api/automation/websocket.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 61,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 441,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/asset-optimizer.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent-clean.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 145,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/autopilot-agent.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cache-manager.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 356,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 114,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 114,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/cursor-telegram-deployment.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/debug-stream.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 24,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/debug-stream.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 24,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/debug-stream.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 47,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-cursor-telegram-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-cursor-telegram-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 341,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-cursor-telegram-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 341,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-cursor-telegram-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-cursor-telegram-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 51,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-cursor-telegram-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 341,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-logger.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 175,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-logger.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 235,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-logger.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 235,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-logger.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 175,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 139,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 139,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 81,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 139,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 139,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 358,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 358,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 358,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 358,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 358,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 358,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 358,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enhanced-travel-agency.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 363,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 267,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 267,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 267,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 267,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 267,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-admin-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 434,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 126,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 688,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 688,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 688,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 688,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 688,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 688,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-collaboration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 688,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-team-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 336,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-team-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 336,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-team-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 336,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-team-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 336,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-team-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 336,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/enterprise-team-management.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 336,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 17,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 8,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/firebase.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 17,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/gemini.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 15,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/gemini.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 15,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/gemini.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 15,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/gemini.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 15,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 31,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 31,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-autopilot-integration.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 42,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/github-mcp-server.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1036,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 90,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/index.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 64,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 655,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 655,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 655,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 655,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 655,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 655,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/intelligent-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 141,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/learning-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 641,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/learning-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 641,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/learning-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 641,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/learning-automation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 641,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/lib/security-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/lib/security-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/lib/security-config.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 104,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/machine-learning-engine.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 203,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/mcp-protocol.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 762,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/mcp-protocol.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 765,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/mcp-server.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1679,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/multi-modal-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 591,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 125,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-integrations.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 941,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 189,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/n8n-node-system.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 645,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 94,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 108,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 94,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 94,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/real-time-streaming.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 57,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 320,
        "match": "req.query.limit as string) || 50;\n      const activities = learningSystem.getUserActivities(userId, ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 351,
        "match": "req.query.limit as string) || 10;\n      const leaderboard = learningSystem.getLeaderboard(limit);\n  ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 371,
        "match": "req.query.limit as string) || 10;\n      const posts = await storage.getPostsWithAuthor(limit);\n     ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 467,
        "match": "req.query.userId as string) || 'user-1';\n      const agents = await storage.getUserAgents(userId);\n ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 488,
        "match": "req.query.userId as string) || 'user-1';\n      const workflows = await storage.getWorkflowsByUser(us",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 570,
        "match": "req.query.userId as string) || 'user-1';\n      const limit = parseInt(req.query.limit as string) || ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3291,
        "match": "req.params.id);\n      if (!workflow) {\n        return res\n          .status(404)\n          .json({ s",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3306,
        "match": "req.params.id\n      );\n      res.json({ success: true, executionId });\n    } catch (error) {\n      r",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3316,
        "match": "req.params.id);\n      if (!execution) {\n        return res\n          .status(404)\n          .json({ ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3358,
        "match": "req.params.id);\n      if (!connector) {\n        return res\n          .status(404)\n          .json({ ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3373,
        "match": "req.params.category as any\n      );\n      res.json({ success: true, connectors });\n    } catch (erro",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3403,
        "match": "req.params.id,\n        credentialName\n      );\n      res.json({ success: true, result });\n    } catc",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3424,
        "match": "req.params.id);\n      if (!prompt) {\n        return res\n          .status(404)\n          .json({ suc",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3439,
        "match": "req.params.category as any\n      );\n      res.json({ success: true, prompts });\n    } catch (error) ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3477,
        "match": "req.params.id,\n        variables,\n        userId\n      );\n      res.json({ success: true, result });",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3490,
        "match": "req.params.id, {\n        userId: req.body.userId || 'anonymous',\n        rating,\n        comment,\n  ",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 3504,
        "match": "req.params.id);\n      if (!statistics) {\n        return res\n          .status(404)\n          .json({",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 70,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 65,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 67,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/auth-middleware.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 121,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/auth-middleware.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 148,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/auth-middleware.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 121,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/auth-middleware.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 263,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/auth-middleware.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 148,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/auth-middleware.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 263,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/enhanced-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 73,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/input-validation.ts",
        "type": "Input Validation",
        "description": "Direct use of request data without validation",
        "line": 258,
        "match": "req.body.email = validator.normalizeEmail(email);\n  next();\n};\n\nexport const validatePassword =",
        "recommendation": "Implement proper security measures"
      },
      {
        "file": "server/security/input-validation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 105,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/input-validation.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 105,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-headers.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 215,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-headers.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 215,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-headers.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 215,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-headers.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 215,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-headers.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 215,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-monitoring.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 456,
        "match": "console.warn(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-monitoring.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 473,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-monitoring.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 480,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-monitoring.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 480,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-monitoring.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 480,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/security/security-monitoring.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 480,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/self-improving-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 29,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 287,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 287,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 287,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 287,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 287,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 222,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/service-monitoring-workflow.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 287,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/smart-learning-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 157,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/smart-learning-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 157,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/smart-learning-ai.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 157,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/smart-telegram-bot.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 105,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/social-media.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 224,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/social-media.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 224,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/social-media.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 224,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/social-media.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 224,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/social-media.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 283,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/task-automation-engine.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 782,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/task-automation-engine.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1017,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/task-automation-engine.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 1017,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 398,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram-routes.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 403,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 22,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 22,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 22,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 22,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 46,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 46,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/telegram.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 46,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/travel-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 244,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/travel-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 426,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/travel-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 426,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/travel-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 244,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/travel-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 426,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/travel-dashboard.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 426,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/vite.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 19,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/web-scraping-tools.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 319,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/web-scraping-tools.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 319,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/web-scraping-tools.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 319,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/web-scraping-tools.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 319,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/web-scraping-tools.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 319,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/workflow-engine.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 634,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "server/workflow-engine.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 634,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/components/dashboard/Dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 79,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/components/dashboard/Dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 79,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/components/dashboard/Dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 79,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/components/dashboard/Dashboard.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 79,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/components/settings/ThemeCustomization.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 197,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/hooks/useWebSocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 41,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/hooks/useWebSocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/hooks/useWebSocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 41,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/hooks/useWebSocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 53,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "src/hooks/useWebSocket.tsx",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 41,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "stock-monitor.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 78,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "stock-monitor.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 78,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "stock-monitor.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 78,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "stock-monitor.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 78,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "stock-monitor.ts",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 78,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 132,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "sw.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 27,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "upload-ai-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 270,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "upload-ai-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 270,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "upload-ai-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 270,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "upload-ai-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 270,
        "match": "console.log(",
        "recommendation": "Remove or replace with proper logging service"
      },
      {
        "file": "upload-ai-tools.js",
        "type": "Console Statement",
        "description": "Console statement in production code",
        "line": 290,
        "match": "console.error(",
        "recommendation": "Remove or replace with proper logging service"
      }
    ],
    "info": []
  },
  "summary": {
    "total": 2024,
    "critical": 28,
    "high": 1,
    "medium": 178,
    "low": 1817,
    "info": 0
  }
}