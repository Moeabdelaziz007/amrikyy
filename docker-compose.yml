version: "3.8"

services:
  redis:
    image: redis:7-alpine
    container_name: aura_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  logic_agent:
    build: 
      context: ./mcp
      dockerfile: Dockerfile
    container_name: aura_logic_agent
    volumes:
      - ./mcp/agents:/app/agents
      - ./mcp/shared:/app/shared
    working_dir: /app
    command: python agents/logic_agent.py
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AGENT_TYPE: logic
      LOG_LEVEL: INFO
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; r=redis.Redis(host='redis'); r.ping()"]
      interval: 30s
      timeout: 10s
      retries: 3

  creativity_agent:
    build: 
      context: ./mcp
      dockerfile: Dockerfile
    container_name: aura_creativity_agent
    volumes:
      - ./mcp/agents:/app/agents
      - ./mcp/shared:/app/shared
    working_dir: /app
    command: python agents/creativity_agent.py
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AGENT_TYPE: creativity
      LOG_LEVEL: INFO
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; r=redis.Redis(host='redis'); r.ping()"]
      interval: 30s
      timeout: 10s
      retries: 3

  optimization_agent:
    build: 
      context: ./mcp
      dockerfile: Dockerfile
    container_name: aura_optimization_agent
    volumes:
      - ./mcp/agents:/app/agents
      - ./mcp/shared:/app/shared
    working_dir: /app
    command: python agents/optimization_agent.py
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AGENT_TYPE: optimization
      LOG_LEVEL: INFO
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; r=redis.Redis(host='redis'); r.ping()"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcp_bridge:
    build: 
      context: ./mcp
      dockerfile: Dockerfile
    container_name: aura_mcp_bridge
    volumes:
      - ./mcp/agents:/app/agents
      - ./mcp/shared:/app/shared
      - ./mcp/cursor_integration:/app/cursor_integration
    working_dir: /app
    command: python cursor_integration/mcp_bridge.py
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BRIDGE_PORT: 8080
      LOG_LEVEL: INFO
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      logic_agent:
        condition: service_healthy
      creativity_agent:
        condition: service_healthy
      optimization_agent:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
    driver: local